version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
         command: sudo chmod +x ./gradlew
      - run:
          name: remove local settings
          command: rm local.properties
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Lists installed targets
          command: android list target
          environment:
          TERM: dumb
      - run:
          name: Show list of system-images
          command: sdkmanager --list --verbose | grep system-images
      - run:
          name: Setup Emulator
          command: sdkmanager "system-images;android-21;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-21;default;armeabi-v7a"
      - run:
          name: Launch Emulator
          command: |
                  cd ${ANDROID_HOME}/emulator;ls
                  export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib
                  emulator -avd test -no-window -noaudio -no-boot-anim -no-window -accel on
          background: true
      - run:
          name: Wait emulator
          command: |
              circle-android wait-for-boot
              adb shell input keyevent 82
      - run:
          name: Run Espresso UI Tests
          command: ./gradlew :app:connectedDebugAndroidTest
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
      #- run:
          #name: Setup emulator
          #command: sdkmanager "system-images;android-16;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-16;default;armeabi-v7a"
      #- run:
          #name: Run Emulator
          #background: true
          #command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel auto -verbose
      #- run:
          #name: Setup Emulator
          #command: sdkmanager "system-images;android-21;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-21;default;armeabi-v7a"
      #- run:
          #name: Set Android SDK Root
          #command: export ANDROID_SDK_ROOT=$ANDROID_HOME
      #- run:
          #name: Install library
          #command: sudo apt-get install libz1 libncurses5 libbz2-1.0 libstdc++6
      #- run:
          #name: Install libpulse library
          #command: sudo apt-get install libpulse0
      #- run:
          #name: Install pulseaudio
          #command: sudo apt-get install pulseaudio
      #- run:
          #name: Run ldconfig
          #command: sudo /sbin/ldconfig -v
      #- run:
          #name: Launch Emulator
          #command: |
                  #cd ${ANDROID_HOME}/emulator;ls
                  #export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && sdkmanager --update && emulator -avd test -noaudio -no-boot-anim -no-window -accel on
                  #export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib
                  #emulator64-arm -avd test -no-window -noaudio -no-boot-anim -no-window -accel on
          #background: true
          #parallel: true
      #- run:
          #name: Wait emulator
          #command: |
              #circle-android wait-for-boot
              #adb shell input keyevent 82
      #- run:
          #name: Run Espresso UI Tests
          #command: ./gradlew :app:connectedDebugAndroidTest
      #- store_artifacts:
          #path: app/build/reports
          #destination: reports
      #- store_test_results:
          #path: app/build/test-results

version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28  # gcloud is baked into this image
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
         command: sudo chmod +x ./gradlew
      - run:
          name: Remove local settings
          command: rm local.properties      
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Build debug APK and release APK
          command: |
            ./gradlew :app:assembleDebug
            ./gradlew :app:assembleDebugAndroidTest
      - run:
          name: Store Google Service Account
          command: echo $GCLOUD_SERVICE_KEY | base64 -di > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Test with Firebase Test Lab
          command: >
            sudo gcloud firebase test android run \ 
              --app <local_server_path>/<app_apk>.apk \ 
              --test <local_server_path>/<app_test_apk>.apk \ 
              --results-bucket cloud-test-${GOOGLE_PROJECT_ID}
      - run:
          name: Install gsutil dependency and copy test results data
          command: |
            sudo pip install -U crcmod
            sudo gsutil -m cp -r -U `sudo gsutil ls gs://[BUCKET_NAME]/[OBJECT_NAME] | tail -1` ${CIRCLE_ARTIFACTS}/ | true

#version: 2
#jobs:
  #build:
    #working_directory: ~/code
    #docker:
      #- image: circleci/android:api-27
    #environment:
      #_JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xms1024m -Xmx1536m -XX:MaxMetaspaceSize=1536m"
      #GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.parallel=false -Dkotlin.incremental=false -DdisablePreDex'
    #steps:
      #- checkout
      #- restore_cache:
          #key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      #- run:
         #name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
         #command: sudo chmod +x ./gradlew
      #- run:
          #name: Remove local settings
          #command: rm local.properties      
      #- run:
          #name: Download Dependencies
          #command: ./gradlew androidDependencies
      #- save_cache:
          #paths:
            #- ~/.gradle
          #key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      #- run:
          #name: Run all checks
          #command: ./gradlew check
      #- run:
          #name: Setup Emulator
          #command: sdkmanager "system-images;android-21;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-21;default;armeabi-v7a"
      #- run:
          #name: Set Android SDK Root
          #command: export ANDROID_SDK_ROOT=$ANDROID_HOME
      #- run:
          #name: Install library
          #command: sudo apt-get install libz1 libncurses5 libbz2-1.0 libstdc++6
      #- run:
          #name: Install libpulse library
          #command: sudo apt-get install libpulse0
      #- run:
          #name: Install pulseaudio
          #command: sudo apt-get install pulseaudio
      #- run:
          #name: Run ldconfig
          #command: sudo /sbin/ldconfig -v
      #- run:
          #name: Launch Emulator
          #command: |
                  #cd ${ANDROID_HOME}/emulator;ls
                  #export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && sdkmanager --update && emulator -avd test -noaudio -no-boot-anim -no-window -accel on
                  #export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib
                  #emulator64-arm -avd test -no-window -noaudio -no-boot-anim -no-window -accel on
          #background: true
          #parallel: true
      #- run:
          #name: Wait emulator
          #command: |
              #circle-android wait-for-boot
              #adb shell input keyevent 82
      #- run:
          #name: Run Espresso UI Tests
          #command: ./gradlew :app:connectedDebugAndroidTest
      #- store_artifacts:
          #path: app/build/reports
          #destination: reports
      #- store_test_results:
          #path: app/build/test-results

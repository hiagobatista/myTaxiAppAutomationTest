version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-25
    environment:
      JVM_OPTS: -Xmx3200m
      #_JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xms1024m -Xmx1536m -XX:MaxMetaspaceSize=1536m"
      #GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.parallel=false -Dkotlin.incremental=false -DdisablePreDex'
      SKIP_OKBUCK: true
      EXTRA_OKBUCK_ARGS: --stacktrace
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
         command: sudo chmod +x ./gradlew
      - run:
          name: remove local settings
          command: rm local.properties
      #- run:
          #name: Setup emulator
          #command: echo y | sdkmanager "platform-tools" "platforms;android-22" "emulator" "system-images;android-22;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-22;default;armeabi-v7a"
      #- run:
          #name: Launch emulator
          #command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel on -gpu off
          #background: true
      - restore_cache:
         keys:
           - emulator-cache-21
      - run:
          name: Setup emulator
          command: sdkmanager "system-images;android-21;google_apis;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-21;google_apis;armeabi-v7a"
          shell: "/bin/bash"
      - save_cache:
          paths:
            - ~/.android/avd
          key: emulator-cache-21
      - run:
          name: Launch emulator
          command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel on
          shell: "/bin/bash"
          background: true
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run all checks
          command: ./gradlew check
      - run:
          name: Run okbuck
          command: SKIP_OKBUCK= ./buckw --version
          shell: "/bin/bash"
      - run:
          name: Run UI Tests
          command: chmod +x android-wait-for-emulator.sh && ./android-wait-for-emulator.sh && ./gradlew :demo:connectedAndroidTest
      - store_artifacts:
          path: library/build/reports
          destination: reports
      - store_test_results:
          path: library/build/test-results
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: app/build/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
